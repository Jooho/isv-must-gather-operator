apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "isv.operator.com/v1alpha1",
          "kind": "MustGather",
          "metadata": {
            "name": "mustgather-test"
          },
          "spec": {
            "mustGatherImgURL": "quay.io/jooholee/isv-smoke-must-gather:0.2.0"
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.4.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: isv-must-gather-operator.v0.2.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: MustGather is the Schema for the mustgathers API
      displayName: Must Gather
      kind: MustGather
      name: mustgathers.isv.operator.com
      specDescriptors:
      - description: MustGatherImgURL is the ISV operator must gather image url
        displayName: ISV Operator Must-Gather Image URL
        path: mustGatherImgURL
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:string
        - urn:alm:descriptor:io.kubernetes:custom
      version: v1alpha1
  description: "ISV Must Gather Operator help you to gather debugging data without download any binary. \nOne thing you should do is creating a MustGather Operand\nExample MustGather Operand\n~~~\napiVersion: isv.operator.com/v1alpha1\nkind: MustGather\n  metadata:\n    name: mustgather\nspec:\n  mustGatherImgURL: \"quay.io/jooholee/isv-smoke-must-gather:0.2\"        <== Update\n~~~\nYou can find mustGatherImgURL from the installed operator page that you are using.\n\nIn order to watch the log status, you can execute the following command:\n~~~\noc logs isv-cli-pod -f\n~~~\n \nAfter finished gathering, you can download mustgather.tar via browser or wget.\nYou can check downloadURL with this command:\n~~~\noc get mustgather -o jsonpath=\"{ .items[*].status.downloadURL}\"\n~~~\n\n"
  displayName: ISV Must Gather Operator
  icon:
  - base64data: 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
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - pods/attach
          - pods/exec
          - pods/log
          - pods/proxy
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - pathch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - isv.operator.com
          resources:
          - mustgathers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - isv.operator.com
          resources:
          - mustgathers/finalizers
          verbs:
          - update
        - apiGroups:
          - isv.operator.com
          resources:
          - mustgathers/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/status
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: isv-must-gather-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: quay.io/jooholee/isv-must-gather-operator:0.2.1
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - configmaps
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - openshift
  - mustgather
  - isv
  - managed service
  links:
  - name: Isv Must Gather Operator
    url: https://isv-must-gather-operator.domain
  maintainers:
  - email: jlee@redhat.com
    name: jay
  maturity: alpha
  provider:
    name: Jooho Lee
    url: https://github.com/Jooho
  version: 0.2.1
